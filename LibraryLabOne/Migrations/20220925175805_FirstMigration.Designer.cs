// <auto-generated />
using System;
using LibraryLabOne.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryLabOne.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220925175805_FirstMigration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("LibraryLabOne.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("inStock")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Harry Potter 1",
                            inStock = false
                        },
                        new
                        {
                            Id = 2,
                            Title = "Harry Potter 2",
                            inStock = false
                        },
                        new
                        {
                            Id = 3,
                            Title = "Harry Potter 3",
                            inStock = true
                        },
                        new
                        {
                            Id = 4,
                            Title = "Harry Potter 4",
                            inStock = true
                        },
                        new
                        {
                            Id = 5,
                            Title = "Harry Potter 5",
                            inStock = true
                        },
                        new
                        {
                            Id = 6,
                            Title = "Harry Potter 6",
                            inStock = true
                        },
                        new
                        {
                            Id = 7,
                            Title = "Harry Potter 7",
                            inStock = true
                        },
                        new
                        {
                            Id = 8,
                            Title = "Harry Potter 1",
                            inStock = true
                        },
                        new
                        {
                            Id = 9,
                            Title = "Harry Potter 2",
                            inStock = false
                        },
                        new
                        {
                            Id = 10,
                            Title = "Harry Potter 3",
                            inStock = true
                        },
                        new
                        {
                            Id = 11,
                            Title = "Harry Potter 4",
                            inStock = true
                        },
                        new
                        {
                            Id = 12,
                            Title = "Harry Potter 5",
                            inStock = true
                        },
                        new
                        {
                            Id = 13,
                            Title = "Harry Potter 6",
                            inStock = true
                        },
                        new
                        {
                            Id = 14,
                            Title = "Harry Potter 7",
                            inStock = true
                        },
                        new
                        {
                            Id = 15,
                            Title = "Harry Potter 1",
                            inStock = true
                        },
                        new
                        {
                            Id = 16,
                            Title = "Harry Potter 2",
                            inStock = true
                        },
                        new
                        {
                            Id = 17,
                            Title = "Harry Potter 3",
                            inStock = true
                        },
                        new
                        {
                            Id = 18,
                            Title = "Harry Potter 4",
                            inStock = true
                        },
                        new
                        {
                            Id = 19,
                            Title = "Harry Potter 5",
                            inStock = true
                        },
                        new
                        {
                            Id = 20,
                            Title = "Harry Potter 6",
                            inStock = true
                        },
                        new
                        {
                            Id = 21,
                            Title = "Harry Potter 7",
                            inStock = true
                        });
                });

            modelBuilder.Entity("LibraryLabOne.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "knatte@ankbusiness.ank",
                            FirstName = "Knatte",
                            LastName = "Anka"
                        },
                        new
                        {
                            Id = 2,
                            Email = "fnatte@ankaab.ank",
                            FirstName = "Fnatte",
                            LastName = "Anka"
                        },
                        new
                        {
                            Id = 3,
                            Email = "tjatte@ankmail.ank",
                            FirstName = "Tjatte",
                            LastName = "Anka"
                        });
                });

            modelBuilder.Entity("LibraryLabOne.Models.Loan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ReturnedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Loans");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 1,
                            CustomerId = 1,
                            EndDate = new DateTime(2022, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2022, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            BookId = 2,
                            CustomerId = 2,
                            EndDate = new DateTime(2022, 8, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2022, 8, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            BookId = 9,
                            CustomerId = 3,
                            EndDate = new DateTime(2022, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2022, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("LibraryLabOne.Models.Loan", b =>
                {
                    b.HasOne("LibraryLabOne.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryLabOne.Models.Customer", "Customer")
                        .WithMany("Books")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("LibraryLabOne.Models.Customer", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
